{"version":3,"file":"static/js/76.ccadc59b.chunk.js","mappings":"+KACA,QAA4B,wBAA5B,EAAgE,wB,sBCMhE,MA6DA,EA7DaA,KACX,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,OAEbC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,WAAS,IAEnCK,EAAAA,EAAAA,YAAU,KACHT,GAELU,iBACE,IACEJ,GAAW,GACX,MAAMK,QAAoBC,EAAAA,EAAAA,IAAeZ,GACzCG,EAAaQ,EAKf,CAJE,MAAOJ,GACPC,EAASD,EACX,CAAC,QACCD,GAAW,EACb,CACF,CAEAO,EAAS,GACR,CAACb,IAKJ,OACEc,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGV,IAAWW,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAClBV,IACCS,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mEAGNC,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAAcJ,SAC1Bb,EAAUkB,OAAS,EAClBlB,EAAUmB,KAAIC,IAAA,IAAC,aAAEC,EAAY,KAAEC,EAAI,UAAEC,EAAS,GAAEC,GAAIJ,EAAA,OAClDR,EAAAA,EAAAA,MAAA,MAAaI,UAAWC,EAAcJ,SAAA,EACpCC,EAAAA,EAAAA,KAAA,OACEW,IACEJ,EAAY,mCAAAK,OAC2BL,GAhBrD,+DAmBYM,IAAKL,EACLM,MAAO,IACPC,OAAQ,OAEVf,EAAAA,EAAAA,KAAA,KAAAD,SAAIS,KACJR,EAAAA,EAAAA,KAAA,KAAAD,SAAA,cAAAa,OAAkBH,OAZXC,EAaJ,KAGPV,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wDAGH,C,mFC9DViB,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,MAAMC,EAAU,mCAEHC,EAAoBxB,UAC/B,MAAMyB,QAAiBH,EAAAA,EAAAA,IAAU,+BAADJ,OAAgCK,KAC1D,QAAEG,GAAYD,EAASE,KAE7B,OAAOD,CAAO,EAGHE,EAAsB5B,UACjC,MAAMyB,QAAiBH,EAAAA,EAAAA,IAAU,uBAADJ,OACPW,EAAK,aAAAX,OAAYK,KAEpC,QAAEG,GAAYD,EAASE,KAC7B,OAAOD,CAAO,EAGHI,EAAiB9B,gBACLsB,EAAAA,EAAAA,IAAU,UAADJ,OAAW5B,EAAO,aAAA4B,OAAYK,KAC9CI,KAGLzB,EAAiBF,UAC5B,MAAMyB,QAAiBH,EAAAA,EAAAA,IAAU,UAADJ,OACpB5B,EAAO,qBAAA4B,OAAoBK,KAEjC,KAAEQ,GAASN,EAASE,KAC1B,OAAOI,CAAI,EAGAC,EAAoBhC,UAC/B,MAAMyB,QAAiBH,EAAAA,EAAAA,IAAU,UAADJ,OACpB5B,EAAO,qBAAA4B,OAAoBK,KAEjC,QAAEG,GAAYD,EAASE,KAC7B,OAAOD,CAAO,C","sources":["webpack://intrum1.github.io/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/service/servise.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast_list\":\"Cast_cast_list__6yHmm\",\"cast_item\":\"Cast_cast_item__SSip9\",\"message\":\"Cast_message__X53aY\"};","import { fetchMovieCast } from '../../components/service/servise';\nimport { useEffect, useState } from 'react';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport { Loader } from '../Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [castMovie, setCastMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    async function getCast() {\n      try {\n        setLoading(true);\n        const fetchedCast = await fetchMovieCast(movieId);\n        setCastMovie(fetchedCast);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    getCast();\n  }, [movieId]);\n\n  const defaultImage =\n    'https://via.placeholder.com/250x375.png?text=Image+Not+Found';\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {error && (\n        <h2>'Oops! Something went wrong! Please try reloading this page!'</h2>\n      )}\n\n      <ul className={css.cast_list}>\n        {castMovie.length > 0 ? (\n          castMovie.map(({ profile_path, name, character, id }) => (\n            <li key={id} className={css.cast_item}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : defaultImage\n                }\n                alt={name}\n                width={250}\n                height={375}\n              />\n              <p>{name}</p>\n              <p>{`Character: ${character}`}</p>\n            </li>\n          ))\n        ) : (\n          <p>We don't have any information about the actors.</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'b62621a55fc4b114d29794b8b2ba9e8c';\n\nexport const fetchTrendingList = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  const { results } = response.data;\n\n  return results;\n};\n\nexport const fetchMoviesBySearch = async query => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  const { results } = response.data;\n  return results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const { cast } = response.data;\n  return cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const { results } = response.data;\n  return results;\n};\n"],"names":["Cast","movieId","useParams","castMovie","setCastMovie","useState","loading","setLoading","error","setError","useEffect","async","fetchedCast","fetchMovieCast","getCast","_jsxs","children","_jsx","Loader","className","css","length","map","_ref","profile_path","name","character","id","src","concat","alt","width","height","axios","API_KEY","fetchTrendingList","response","results","data","fetchMoviesBySearch","query","fetchMovieById","cast","fetchMovieReviews"],"sourceRoot":""}