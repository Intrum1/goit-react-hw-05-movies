{"version":3,"file":"static/js/186.6cea6814.chunk.js","mappings":"mMAOA,MAgDA,EAhDgBA,KACd,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,OAEbC,EAAcC,IAAkBC,EAAAA,EAAAA,UAAS,KACzCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,WAAS,GAoBnC,OAlBAK,EAAAA,EAAAA,YAAU,KACHT,GAELU,iBACE,IACEJ,GAAW,GACX,MAAMK,QAAoBC,EAAAA,EAAAA,IAAkBZ,GAC5CG,EAAeQ,EAKjB,CAJE,MAAOJ,GACPC,EAASD,EACX,CAAC,QACCD,GAAW,EACb,CACF,CAEAO,EAAS,GACR,CAACb,KAGFc,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGV,IAAWW,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAClBV,IACCS,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kEAGLb,EAAagB,OAAS,GACrBF,EAAAA,EAAAA,KAAA,MAAAD,SACGb,EAAaiB,KAAIC,IAAA,IAAC,OAAEC,EAAM,QAAEC,EAAO,GAAEC,GAAIH,EAAA,OACxCN,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,WAASM,MACbL,EAAAA,EAAAA,KAAA,KAAAD,SAAIO,MAFGC,EAGJ,OAITP,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gDAED,C,mFCjDVS,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,MAAMC,EAAU,mCAEHC,EAAoBhB,UAC/B,MAAMiB,QAAiBH,EAAAA,EAAAA,IAAU,+BAADI,OAAgCH,KAC1D,QAAEI,GAAYF,EAASG,KAE7B,OAAOD,CAAO,EAGHE,EAAsBrB,UACjC,MAAMiB,QAAiBH,EAAAA,EAAAA,IAAU,uBAADI,OACPI,EAAK,aAAAJ,OAAYH,KAEpC,QAAEI,GAAYF,EAASG,KAC7B,OAAOD,CAAO,EAGHI,EAAiBvB,gBACLc,EAAAA,EAAAA,IAAU,UAADI,OAAW5B,EAAO,aAAA4B,OAAYH,KAC9CK,KAGLI,EAAiBxB,UAC5B,MAAMiB,QAAiBH,EAAAA,EAAAA,IAAU,UAADI,OACpB5B,EAAO,qBAAA4B,OAAoBH,KAEjC,KAAEU,GAASR,EAASG,KAC1B,OAAOK,CAAI,EAGAvB,EAAoBF,UAC/B,MAAMiB,QAAiBH,EAAAA,EAAAA,IAAU,UAADI,OACpB5B,EAAO,qBAAA4B,OAAoBH,KAEjC,QAAEI,GAAYF,EAASG,KAC7B,OAAOD,CAAO,C","sources":["components/Reviews/Reviews.jsx","components/service/servise.js"],"sourcesContent":["import React from 'react';\n\nimport { fetchMovieReviews } from '../../components/service/servise';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviewsMovie, setReviewMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    async function getCast() {\n      try {\n        setLoading(true);\n        const fetchedCast = await fetchMovieReviews(movieId);\n        setReviewMovie(fetchedCast);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    getCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {error && (\n        <h2>'Oops! Something went wrong! Please try reloading this page!'</h2>\n      )}\n\n      {reviewsMovie.length > 0 ? (\n        <ul>\n          {reviewsMovie.map(({ author, content, id }) => (\n            <li key={id}>\n              <h2>Author: {author}</h2>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'b62621a55fc4b114d29794b8b2ba9e8c';\n\nexport const fetchTrendingList = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  const { results } = response.data;\n\n  return results;\n};\n\nexport const fetchMoviesBySearch = async query => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  const { results } = response.data;\n  return results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const { cast } = response.data;\n  return cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const { results } = response.data;\n  return results;\n};\n"],"names":["Reviews","movieId","useParams","reviewsMovie","setReviewMovie","useState","loading","setLoading","error","setError","useEffect","async","fetchedCast","fetchMovieReviews","getCast","_jsxs","children","_jsx","Loader","length","map","_ref","author","content","id","axios","API_KEY","fetchTrendingList","response","concat","results","data","fetchMoviesBySearch","query","fetchMovieById","fetchMovieCast","cast"],"sourceRoot":""}