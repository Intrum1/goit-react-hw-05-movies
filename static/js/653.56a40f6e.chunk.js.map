{"version":3,"file":"static/js/653.56a40f6e.chunk.js","mappings":"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","sources":["components/service/servise.js","webpack://intrum1.github.io/./src/components/SelectedMovieDetails/SelectedMovieDetails.module.css?72bb","components/SelectedMovieDetails/SelectedMovieDetails.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'b62621a55fc4b114d29794b8b2ba9e8c';\n\nexport const fetchTrendingList = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  const { results } = response.data;\n\n  return results;\n};\n\nexport const fetchMoviesBySearch = async query => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  const { results } = response.data;\n  return results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const { cast } = response.data;\n  return cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const { results } = response.data;\n  return results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"selected_container\":\"SelectedMovieDetails_selected_container__kdLFI\",\"container_info\":\"SelectedMovieDetails_container_info__hvyi3\"};","import css from './SelectedMovieDetails.module.css';\n\nconst SelectedMovieDetails = ({\n  movie: { poster_path, title, release_date, vote_average, overview, genres },\n}) => {\n  const defaultImage =\n    'https://via.placeholder.com/250x375.png?text=Image+Not+Found';\n\n  return (\n    <div className={css.selected_container}>\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n            : defaultImage\n        }\n        alt={title}\n        width={400}\n      />\n      <div className={css.container_info}>\n        <h1>{`${title} (${release_date.split('-')[0]})`}</h1>\n        <h4>{`User Store: ${Math.round(vote_average * 10)}%`}</h4>\n        <h2>Owerview</h2>\n        <p>{overview}</p>\n        {genres && genres.length > 0 && (\n          <>\n            <h3>Genres</h3>\n            <p>\n              {genres.map((genre, idx) => (\n                <span key={idx}>{genre.name}</span>\n              ))}\n            </p>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SelectedMovieDetails;\n","import { fetchMovieById } from '../../components/service/servise';\nimport { Loader } from 'components/Loader/Loader';\nimport SelectedMovieDetails from 'components/SelectedMovieDetails/SelectedMovieDetails';\nimport React, { useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    async function getMovie() {\n      try {\n        setLoading(true);\n        const fetchedMovie = await fetchMovieById(movieId);\n        setSelectedMovie(fetchedMovie);\n      } catch (error) {\n        window.alert(\n          'Oops! Something went wrong! Please try reloading this page!'\n        );\n      } finally {\n        setLoading(false);\n      }\n    }\n    // if (typeof movieId !== 'undefined') {\n    //   getMovie();\n    // }\n    getMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <Link to={backLinkRef.current}>Go back</Link>\n\n      {selectedMovie && <SelectedMovieDetails movie={selectedMovie} />}\n\n      <ul>\n        <li>\n          <NavLink to=\"cast\">Cast</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"reviews\">Reviews</NavLink>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","fetchTrendingList","async","response","concat","results","data","fetchMoviesBySearch","query","fetchMovieById","movieId","fetchMovieCast","cast","fetchMovieReviews","_ref","movie","poster_path","title","release_date","vote_average","overview","genres","_jsxs","className","css","children","_jsx","src","alt","width","split","Math","round","length","_Fragment","map","genre","idx","name","MovieDetails","_location$state$from","_location$state","useParams","selectedMovie","setSelectedMovie","useState","loading","setLoading","location","useLocation","backLinkRef","useRef","state","from","useEffect","fetchedMovie","error","window","alert","getMovie","Loader","Link","to","current","SelectedMovieDetails","NavLink","Outlet"],"sourceRoot":""}